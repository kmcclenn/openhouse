plugins {
  id 'openhouse.java-minimal-conventions'
  id 'openhouse.maven-publish'
  id 'com.github.johnrengelman.shadow' version '6.0.0'
  id 'scala'
  id 'antlr'
  id 'openhouse.iceberg-conventions'
}

ext {
  icebergVersion = '1.2.0'
  sparkVersion = '3.1.1'
}

configurations {
  /*
     The Gradle Antlr plugin erroneously adds both antlr-build and runtime dependencies to the runtime path. This
     bug https://github.com/gradle/gradle/issues/820 exists because older versions of Antlr do not have separate
     runtime and implementation dependencies and they do not want to break backwards compatibility. So to only end up with
     the runtime dependency on the runtime classpath we remove the dependencies added by the plugin here. Then add
     the runtime dependency back to only the runtime configuration manually.
    */
  implementation {
    extendsFrom = extendsFrom.findAll { it != configurations.antlr }
  }

  fatJarPackagedDependencies {
    exclude(group: 'org.antlr') // included in spark
    exclude(group: 'org.mapstruct')
  }
  fatJarRuntimeDependencies
  shadow.extendsFrom fatJarRuntimeDependencies
}


dependencies {
  // Required because we remove antlr plugin dependencies from the compile configuration, see note above
  runtimeOnly "org.antlr:antlr4-runtime:4.7.1"
  antlr "org.antlr:antlr4:4.7.1"

  // runtimeOnly("org.apache.iceberg:iceberg-spark-runtime-3.1_2.12:1.2.0")
  implementation("com.azure:azure-storage-file-datalake:12.19.0") {
    exclude group: 'io.netty'
  }
  // other options: upgrade netty for client side; downgrade 12.9.0, required additional dependencies


  // runtimeOnly("org.apache.iceberg:iceberg-azure:1.5.0")
  // runtimeOnly("io.netty:netty-transport:4.1.75.Final")
  // runtimeOnly("io.netty:netty-codec-http:4.1.75.Final")

  compileOnly(project(path: ':integrations:java:openhouse-java-runtime', configuration: 'shadow'))
  compileOnly("org.apache.spark:spark-hive_2.12:${sparkVersion}") {
    exclude group: 'org.apache.avro', module: 'avro'
    exclude group: 'org.apache.arrow'
    exclude group: 'io.netty', module: 'netty-buffer'
    exclude group: 'org.roaringbitmap'
  }

  fatJarPackagedDependencies(project(path: ':integrations:java:openhouse-java-runtime'))
  fatJarRuntimeDependencies("org.apache.iceberg:iceberg-spark-runtime-3.1_2.12:" + icebergVersion)

  generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-visitor', '-package', 'com.linkedin.openhouse.spark.sql.catalyst.parser.extensions']
  }
}


shadowJar {
  dependencies {
    exclude("javax/**")
  }

  configurations = [project.configurations.fatJarPackagedDependencies]
  mergeServiceFiles()
  classifier null
  zip64 true
}

jar.enabled=false

artifacts {
  archives shadowJar
}